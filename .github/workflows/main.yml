name: Three Tier App CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "Destroy the infrastructure"
        required: false
        default: "false"

jobs:
  deploy_or_destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-5
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set aws_default_region $AWS_DEFAULT_REGION

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Plan
        env:
          TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_VPC_CIDR }}
          TF_VAR_public_subnet_cidrs: ${{ secrets.TF_VAR_PUBLIC_SUBNET_CIDRS }}
          TF_VAR_private_subnet_cidrs: ${{ secrets.TF_VAR_PRIVATE_SUBNET_CIDRS }}
          TF_VAR_availability_zones: ${{ secrets.TF_VAR_AVAILABILITY_ZONES }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_PAIR }}
          TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
        run: terraform plan -out "plan.out"

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'false'
        env:
          TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_VPC_CIDR }}
          TF_VAR_public_subnet_cidrs: ${{ secrets.TF_VAR_PUBLIC_SUBNET_CIDRS }}
          TF_VAR_private_subnet_cidrs: ${{ secrets.TF_VAR_PRIVATE_SUBNET_CIDRS }}
          TF_VAR_availability_zones: ${{ secrets.TF_VAR_AVAILABILITY_ZONES }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_PAIR }}
          TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
        run: |
          terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true'
        env:
          TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_VPC_CIDR }}
          TF_VAR_public_subnet_cidrs: ${{ secrets.TF_VAR_PUBLIC_SUBNET_CIDRS }}
          TF_VAR_private_subnet_cidrs: ${{ secrets.TF_VAR_PRIVATE_SUBNET_CIDRS }}
          TF_VAR_availability_zones: ${{ secrets.TF_VAR_AVAILABILITY_ZONES }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_PAIR }}
          TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
        run: |
          terraform destroy -auto-approve
